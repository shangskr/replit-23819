name: update-memos

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  GITHUB_NAME: ${{ secrets.GH_NAME }} # 你的github昵称
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }} # 你的github邮箱
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # github token

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Set Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 7
        run_install: false

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        check-latest: true
        
    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: latest
        platform: x64
    
    - name: Replit #Replit更新
      run: |
        mkdir myrepl
        git clone --recurse-submodules https://github.com/alist-org/alist-web.git
        cd ./alist-web
        wget https://crowdin.com/backend/download/project/alist/zh-CN.zip
        unzip zh-CN.zip
        wget https://crowdin.com/backend/download/project/alist/zh-TW.zip
        unzip zh-TW.zip
        wget -O ja.zip https://crowdin.com/backend/download/project/alist/ja.zip
        unzip ja.zip
        node ./scripts/i18n.mjs
        rm zh-CN.zip
        rm zh-TW.zip
        rm ja.zip
        pnpm install --no-frozen-lockfile && pnpm build
        cd ..
        git clone https://github.com/alist-org/alist replit23819
        cp -r ./alist-web/dist ./replit23819/public
        cp -r ./alist-web/dist ./myrepl/public
        cd replit23819
        appName="myrepl.moe"
        builtAt="$(date +'%F %T %z')"
        goVersion=$(go version | sed 's/go version //')
        gitAuthor=$(git show -s --format='format:%aN <%ae>' HEAD)
        gitCommit=$(git log --pretty=format:"%h" -1)
        version=$(git describe --long --tags --dirty --always)
        webVersion=$(wget -qO- -t1 -T2 "https://api.github.com/repos/alist-org/alist-web/releases/latest" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/ //g')
        ldflags="\
        -w -s \
        -X 'github.com/alist-org/alist/v3/internal/conf.BuiltAt=$builtAt' \
        -X 'github.com/alist-org/alist/v3/internal/conf.GoVersion=$goVersion' \
        -X 'github.com/alist-org/alist/v3/internal/conf.GitAuthor=$gitAuthor' \
        -X 'github.com/alist-org/alist/v3/internal/conf.GitCommit=$gitCommit' \
        -X 'github.com/alist-org/alist/v3/internal/conf.Version=$version' \
        -X 'github.com/alist-org/alist/v3/internal/conf.WebVersion=$webVersion' \
        "
        go build -ldflags="$ldflags" .
        cp -r -f ./alist ../myrepl/myrepl.moe
        cd ..

    - name: Replit23819 #Replit上传
      uses: github-actions-x/commit@v2.9
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Update memos"
        files: ./myrepl/
        rebase: 'true'
        name: ${{ env.GITHUB_NAME }}
        email: ${{ env.GITHUB_EMAIL }}

    - name: keep alive
      uses: gautamkrishnar/keepalive-workflow@master # keep workflows from being suspended when no commit for a long time
